// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.28.2
// source: proto/students.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	StudentService_AddStudent_FullMethodName              = "/StudentService/AddStudent"
	StudentService_GetStudent_FullMethodName              = "/StudentService/GetStudent"
	StudentService_GetAverageGrade_FullMethodName         = "/StudentService/GetAverageGrade"
	StudentService_GetGenderPercentage_FullMethodName     = "/StudentService/getGenderPercentage"
	StudentService_GetMaxAgeByGender_FullMethodName       = "/StudentService/getMaxAgeByGender"
	StudentService_GetMinAgeByGender_FullMethodName       = "/StudentService/getMinAgeByGender"
	StudentService_GetAverageGradeByGender_FullMethodName = "/StudentService/getAverageGradeByGender"
)

// StudentServiceClient is the client API for StudentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StudentServiceClient interface {
	AddStudent(ctx context.Context, in *Student, opts ...grpc.CallOption) (*Empty, error)
	GetStudent(ctx context.Context, in *StudentRequest, opts ...grpc.CallOption) (*Student, error)
	GetAverageGrade(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AverageGradeResponse, error)
	GetGenderPercentage(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PercentageResponse, error)
	GetMaxAgeByGender(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*MaxAgeByGenderResponse, error)
	GetMinAgeByGender(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*MinAgeByGenderResponse, error)
	GetAverageGradeByGender(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AverageGradeByGenderResponse, error)
}

type studentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStudentServiceClient(cc grpc.ClientConnInterface) StudentServiceClient {
	return &studentServiceClient{cc}
}

func (c *studentServiceClient) AddStudent(ctx context.Context, in *Student, opts ...grpc.CallOption) (*Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Empty)
	err := c.cc.Invoke(ctx, StudentService_AddStudent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentServiceClient) GetStudent(ctx context.Context, in *StudentRequest, opts ...grpc.CallOption) (*Student, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Student)
	err := c.cc.Invoke(ctx, StudentService_GetStudent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentServiceClient) GetAverageGrade(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AverageGradeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AverageGradeResponse)
	err := c.cc.Invoke(ctx, StudentService_GetAverageGrade_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentServiceClient) GetGenderPercentage(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PercentageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PercentageResponse)
	err := c.cc.Invoke(ctx, StudentService_GetGenderPercentage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentServiceClient) GetMaxAgeByGender(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*MaxAgeByGenderResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(MaxAgeByGenderResponse)
	err := c.cc.Invoke(ctx, StudentService_GetMaxAgeByGender_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentServiceClient) GetMinAgeByGender(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*MinAgeByGenderResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(MinAgeByGenderResponse)
	err := c.cc.Invoke(ctx, StudentService_GetMinAgeByGender_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentServiceClient) GetAverageGradeByGender(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AverageGradeByGenderResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AverageGradeByGenderResponse)
	err := c.cc.Invoke(ctx, StudentService_GetAverageGradeByGender_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StudentServiceServer is the server API for StudentService service.
// All implementations must embed UnimplementedStudentServiceServer
// for forward compatibility.
type StudentServiceServer interface {
	AddStudent(context.Context, *Student) (*Empty, error)
	GetStudent(context.Context, *StudentRequest) (*Student, error)
	GetAverageGrade(context.Context, *Empty) (*AverageGradeResponse, error)
	GetGenderPercentage(context.Context, *Empty) (*PercentageResponse, error)
	GetMaxAgeByGender(context.Context, *Empty) (*MaxAgeByGenderResponse, error)
	GetMinAgeByGender(context.Context, *Empty) (*MinAgeByGenderResponse, error)
	GetAverageGradeByGender(context.Context, *Empty) (*AverageGradeByGenderResponse, error)
	mustEmbedUnimplementedStudentServiceServer()
}

// UnimplementedStudentServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedStudentServiceServer struct{}

func (UnimplementedStudentServiceServer) AddStudent(context.Context, *Student) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddStudent not implemented")
}
func (UnimplementedStudentServiceServer) GetStudent(context.Context, *StudentRequest) (*Student, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStudent not implemented")
}
func (UnimplementedStudentServiceServer) GetAverageGrade(context.Context, *Empty) (*AverageGradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAverageGrade not implemented")
}
func (UnimplementedStudentServiceServer) GetGenderPercentage(context.Context, *Empty) (*PercentageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGenderPercentage not implemented")
}
func (UnimplementedStudentServiceServer) GetMaxAgeByGender(context.Context, *Empty) (*MaxAgeByGenderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMaxAgeByGender not implemented")
}
func (UnimplementedStudentServiceServer) GetMinAgeByGender(context.Context, *Empty) (*MinAgeByGenderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMinAgeByGender not implemented")
}
func (UnimplementedStudentServiceServer) GetAverageGradeByGender(context.Context, *Empty) (*AverageGradeByGenderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAverageGradeByGender not implemented")
}
func (UnimplementedStudentServiceServer) mustEmbedUnimplementedStudentServiceServer() {}
func (UnimplementedStudentServiceServer) testEmbeddedByValue()                        {}

// UnsafeStudentServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StudentServiceServer will
// result in compilation errors.
type UnsafeStudentServiceServer interface {
	mustEmbedUnimplementedStudentServiceServer()
}

func RegisterStudentServiceServer(s grpc.ServiceRegistrar, srv StudentServiceServer) {
	// If the following call pancis, it indicates UnimplementedStudentServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&StudentService_ServiceDesc, srv)
}

func _StudentService_AddStudent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Student)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentServiceServer).AddStudent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudentService_AddStudent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentServiceServer).AddStudent(ctx, req.(*Student))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentService_GetStudent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentServiceServer).GetStudent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudentService_GetStudent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentServiceServer).GetStudent(ctx, req.(*StudentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentService_GetAverageGrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentServiceServer).GetAverageGrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudentService_GetAverageGrade_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentServiceServer).GetAverageGrade(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentService_GetGenderPercentage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentServiceServer).GetGenderPercentage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudentService_GetGenderPercentage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentServiceServer).GetGenderPercentage(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentService_GetMaxAgeByGender_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentServiceServer).GetMaxAgeByGender(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudentService_GetMaxAgeByGender_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentServiceServer).GetMaxAgeByGender(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentService_GetMinAgeByGender_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentServiceServer).GetMinAgeByGender(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudentService_GetMinAgeByGender_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentServiceServer).GetMinAgeByGender(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _StudentService_GetAverageGradeByGender_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentServiceServer).GetAverageGradeByGender(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StudentService_GetAverageGradeByGender_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentServiceServer).GetAverageGradeByGender(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// StudentService_ServiceDesc is the grpc.ServiceDesc for StudentService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StudentService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "StudentService",
	HandlerType: (*StudentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddStudent",
			Handler:    _StudentService_AddStudent_Handler,
		},
		{
			MethodName: "GetStudent",
			Handler:    _StudentService_GetStudent_Handler,
		},
		{
			MethodName: "GetAverageGrade",
			Handler:    _StudentService_GetAverageGrade_Handler,
		},
		{
			MethodName: "getGenderPercentage",
			Handler:    _StudentService_GetGenderPercentage_Handler,
		},
		{
			MethodName: "getMaxAgeByGender",
			Handler:    _StudentService_GetMaxAgeByGender_Handler,
		},
		{
			MethodName: "getMinAgeByGender",
			Handler:    _StudentService_GetMinAgeByGender_Handler,
		},
		{
			MethodName: "getAverageGradeByGender",
			Handler:    _StudentService_GetAverageGradeByGender_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/students.proto",
}
